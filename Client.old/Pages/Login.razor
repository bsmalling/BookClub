@page "/login"
@using BookClub.Models
@inject NavigationManager Navigation;
@inject CustomAuthenticationStateProvider AuthStateProvider;

<h3>BookClub Login</h3>

<EditForm Model="@loginModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="alert alert-danger" hidden="@loginModel.LoginFailureHidden">
        Invalid login username or password.
    </div>
    <div class="form-group">
        <label>Username</label>
        <InputText id="email" @bind-Value="loginModel.Username" class="form-control" />
    </div>
    <div class="form-group">
        <label>Password</label>
        <InputText id="password" type="password" @bind-Value="loginModel.Password" class="form-control" />
    </div>
    <div class="form-group mt-1">
        <button type="submit" class="btn btn-primary w-100">Login Now</button>
    </div>
</EditForm>

@code {
    private LoginViewModel loginModel = new();

    private async Task HandleValidSubmit()
    {
        var user = loginModel.TryLogin(out string jwtToken);
        if (user == null) return;

        await AuthStateProvider.Login(jwtToken);
        Navigation.NavigateTo("/");
    }
}
